<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <artifactId>spring-boot-starter-parent</artifactId>
        <groupId>org.springframework.boot</groupId>
        <version>2.6.2</version>
    </parent>

    <groupId>org.gear</groupId>
    <artifactId>single-module-demo</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <geotools.version>27.1</geotools.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
        </dependency>

        <!--mybatis-plus-->
        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus-boot-starter</artifactId>
            <version>3.5.0</version>
        </dependency>

        <!--lombok-->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>

        <!--hutool-->
        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-all</artifactId>
            <version>5.7.5</version>
        </dependency>

        <!-- 数据连接池 druid-->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid-spring-boot-starter</artifactId>
            <version>1.1.22</version>
        </dependency>

        <dependency>
            <groupId>org.geotools</groupId>
            <artifactId>gt-geojson-core</artifactId>
            <version>${geotools.version}</version>
        </dependency>

        <dependency>
            <groupId>org.geotools</groupId>
            <artifactId>gt-shapefile</artifactId>
            <version>${geotools.version}</version>
        </dependency>
    </dependencies>

    <repositories>
        <repository>
            <id>osgeo</id>
            <name>OSGeo Release Repository</name>
            <url>https://repo.osgeo.org/repository/release/</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <releases>
                <enabled>true</enabled>
            </releases>
        </repository>
        <repository>
            <id>osgeo-snapshot</id>
            <name>OSGeo Snapshot Repository</name>
            <url>https://repo.osgeo.org/repository/snapshot/</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <releases>
                <enabled>false</enabled>
            </releases>
        </repository>
    </repositories>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <excludes>
                        <!--打包时排除lombok-->
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                    <!--                    <image>-->
                    <!--                        &lt;!&ndash;配置镜像名称&ndash;&gt;-->
                    <!--                        <name>registry.cn-hangzhou.aliyuncs.com/gear-repo/${project.name}:${project.version}</name>-->
                    <!--                        &lt;!&ndash;镜像打包完成后自动推送到镜像仓库&ndash;&gt;-->
                    <!--                        <publish>true</publish>-->
                    <!--                    </image>-->
                    <!--                    <docker>-->
                    <!--                        &lt;!&ndash;Docker远程管理地址&ndash;&gt;-->
                    <!--                        <host>http://127.0.0.1:2375</host>-->
                    <!--                        &lt;!&ndash;不使用TLS访问&ndash;&gt;-->
                    <!--                        <tlsVerify>false</tlsVerify>-->
                    <!--                        &lt;!&ndash;Docker推送镜像仓库配置&ndash;&gt;-->
                    <!--                        <publishRegistry>-->
                    <!--                            &lt;!&ndash;推送镜像仓库用户名&ndash;&gt;-->
                    <!--                            <username>***</username>-->
                    <!--                            &lt;!&ndash;推送镜像仓库密码&ndash;&gt;-->
                    <!--                            <password>***</password>-->
                    <!--                            &lt;!&ndash;推送镜像仓库地址&ndash;&gt;-->
                    <!--                            <url>https://registry.cn-hangzhou.aliyuncs.com/gear-repo/</url>-->
                    <!--                        </publishRegistry>-->
                    <!--                    </docker>-->
                </configuration>
            </plugin>

            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.44.0</version>
                <configuration>
                    <!-- Docker 远程管理地址-->
                    <dockerHost>http://127.0.0.1:2375</dockerHost>
                    <images>
                        <image>
                            <!--由于推送到私有镜像仓库，镜像名需要添加仓库地址-->
                            <name>registry.cn-hangzhou.aliyuncs.com/gear-repo/${project.artifactId}:${project.version}
                            </name>
                            <!--定义镜像构建行为-->
                            <build>
                                <!--定义基础镜像-->
                                <from>openjdk:8-jre</from>
                                <args>
                                    <JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
                                </args>
                                <!--定义哪些文件拷贝到容器中-->
                                <assembly>
                                    <!--定义拷贝到容器的目录-->
                                    <targetDir>/</targetDir>
                                    <!--只拷贝生成的jar包-->
                                    <descriptorRef>artifact</descriptorRef>
                                </assembly>
                                <!--定义容器启动命令-->
                                <entryPoint>["java", "-jar", "/${project.build.finalName}.jar"]
                                </entryPoint>
                                <!--定义维护者-->
                                <maintainer>guoyingdong</maintainer>
                            </build>
                        </image>
                    </images>
                    <authConfig>
                        <push>
                            <username>gearing</username>
                            <password>gear266156</password>
                        </push>
                    </authConfig>
                </configuration>
                <executions>
                    <!--如果想在项目打包时构建镜像添加-->
                    <execution>
                        <id>build-image</id>
                        <phase>package</phase>
                        <goals>
                            <goal>build</goal>
                            <goal>push</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>